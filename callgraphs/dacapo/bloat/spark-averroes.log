running spark-averroes for dacapo/bloat
...
Generating the call graph from SparkAverroes.

Preparing classes ...
Adding application archive: /home/aec/Desktop/averroes-home/all-output-1.6/1/benchmarks-averroes/dacapo/bloat/organized-app.jar
Adding placeholder library archive: /home/aec/Desktop/averroes-home/all-output-1.6/1/benchmarks-averroes/dacapo/bloat/placeholder-lib.jar
Adding placeholder library archive: /home/aec/Desktop/averroes-home/all-output-1.6/1/benchmarks-averroes/dacapo/bloat/averroes-lib-class.jar
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 3923
Initially reachable methods: 4
Classes with at least one reachable method: 4
[Spark] Pointer Assignment Graph in 1.0 seconds.
Total types: 569
[Spark] Type masks in 0.0 seconds.
VarNodes: 15
FieldRefNodes: 2
AllocNodes: 4
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 4 nodes.
Now handling field references
Worklist has 1261 nodes.
Now handling field references
Worklist has 1258 nodes.
Now handling field references
Worklist has 914 nodes.
Now handling field references
Worklist has 468 nodes.
Now handling field references
Worklist has 702 nodes.
Now handling field references
Worklist has 381 nodes.
Now handling field references
Worklist has 65 nodes.
Now handling field references
Worklist has 34 nodes.
Now handling field references
[Spark] Propagation in 12.2 seconds.
[Spark] Solution found in 12.3 seconds.
[Spark] Number of reachable methods: 3028
size of original spark is: 20271
Total time to finish: 17.59
=================================================
# edges = 16240
=================================================
maximum resident set size: 345428

